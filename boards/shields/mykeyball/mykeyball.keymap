/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dsti>

#define DEFAULT 0
#define UPPER 1
#define LOWER 2
#define NAVI 3

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <190>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
            bindings = <
&kp ESC   &kp N1   &kp N2       &kp N3        &kp N4        &kp N5                   /**/            &kp N6     &kp N7        &kp N8        &kp N9       &kp N0   &kp GRAVE
&kp TAB   &kp Q    &kp W        &kp E         &kp R         &kp T                    /**/            &kp Y      &kp U         &kp I         &kp O        &kp P    &kp MINUS
&kp CAPS  &kp A    &bhm LALT S  &bhm LCTRL D  &bhm LSHFT F  &kp G                    /**/            &kp H      &bhm RSHFT J  &bhm RCTRL K  &bhm RALT L  &kp SEMI &kp EQUAL
&kp SQT   &kp Z    &kp X        &kp C         &kp V         &kp B        &kp LBKT    /**/   &kp RBKT &kp N      &kp M         &lt 2 COMMA   &kp DOT      &kp FSLH &kp BSLH
                                              &lt 2 LANG1   &lt 1 SPACE  &lt 2 DEL   /**/   &kp BSPC &lt 1 RET                             
            >;
        };

        upper_layer {
            bindings = <
&kp ESC    &kp F1     &kp F2      &kp F3     &kp F4     &kp F5             /**/           &kp F6  &kp F7     &kp F8    &kp F9     &kp F10   &kp F11
&kp TAB    &kp Q      &kp W       &kp E      &kp R      &kp T              /**/           &kp Y   &kp U      &kp UP    &kp O      &kp P     &kp UNDER
&kp CAPS   &kp LC(A)  &kp LC(S)   &trans     &trans     &kp G              /**/           &kp H   &kp LEFT   &kp DOWN  &kp RIGHT  &kp SEMI  &kp SQT
&kp LC(Y)  &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LC(V)  &kp B     &kp LBKT /**/  &kp RBKT &kp N   &mkp LCLK  &mkp SCLK  &mkp RCLK  &kp FSLH  &kp DQT                                          &kp RET    &kp SPACE &kp DEL  /**/  &kp BSPC &kp RET                             
            >;
        };

        lower_layer {
            bindings = <
&kp ESC    &kp N1     &kp N2      &kp N3         &kp N4        &kp N5       /**/        &kp N6 &kp N7        &kp N8        &kp N9       &kp N0   &kp GRAVE
&kp TAB    &kp Q      &kp W       &kp E         &kp R         &kp T        /**/        &kp Y  &kp U         &kp UP         &kp O        &kp P    &kp EQUAL
&kp CAPS   &kp A      &trans      &trans     &trans     &kp G        /**/        &kp H    &kp LEFT  &kp DOWN &kp RIGHT &kp SEMI   &kp MINUS
&kp LC(Y)  &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LC(V)  &kp B     &kp LBKT /**/  &kp RBKT &kp N         &kp LCLK     &kp SCLK    &kp RCLK  &kp FSLH &kp BSLH
                                             &kp RET    &kp SPACE &kp DEL  /**/  &kp BSPC &kp RET                             
            >;
        };
    };
};
