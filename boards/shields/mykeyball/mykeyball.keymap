*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

#include <behaviors/mouse_keys.dtsi>

#define DEFAULT 0
#define UPPER 1
#define LOWER 2
#define NAVI 3

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms=<200>;
};

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;    // <---[[moderate duration]]
            quick-tap-ms = <180>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        cpstd: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp CAPS>, <&caps_word>;
        };

        ftd1: tap_dance_1f1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp F1>;
        };

        ftd2: tap_dance_2f2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N2>, <&kp F2>;
        };

        ftd3: tap_dance_3f3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N3>, <&kp F3>;
        };

        ftd4: tap_dance_4f4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N4>, <&kp F4>;
        };

        ftd5: tap_dance_5f5 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N5>, <&kp F5>;
        };

        ftd6: tap_dance_6f6 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N6>, <&kp F6>;
        };

        ftd7: tap_dance_7f7 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N7>, <&kp F7>;
        };

        ftd8: tap_dance_8f8 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N8>, <&kp F8>;
        };

        ftd9: tap_dance_9f9 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N9>, <&kp F9>;
        };

        ftd10: tap_dance_0f10 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N0>, <&kp F10>;
        };

        cptd: tap_dance_copy {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C>, <&kp LC(C)>;
        };
        psttd: tap_dance_paste {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp V>, <&kp LC(V)>;
        };
        cttd: tap_dance_cut {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp X>, <&kp LC(X)>;
        };
        udtd: tap_dance_undo {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Z>, <&kp LC(Z)>;
        };
        rdtd: tap_dance_redo {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp LC(Y)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
            bindings = <
&kp ESC   &ftd1        &ftd2        &ftd3         &ftd4         &ftd5                    /**/            &ftd6      &ftd7         &ftd8         &ftd9        &ftd10         &kp GRAVE
&kp TAB   &kp Q        &kp W        &kp E         &kp R         &kp T                    /**/            &kp Y      &kp U         &kp I         &kp O        &kp P          &kp MINUS
&cpstd    &bhm LGUI A  &bhm LALT S  &bhm LCTRL D  &bhm LSHFT F  &kp G                    /**/            &kp H      &bhm RSHFT J  &bhm RCTRL K  &bhm RALT L  &bhm RGUI SEMI &kp EQUAL
&kp SQT   &udtd        &cttd        &cptd         &psttd        &kp B        &kp LBKT    /**/   &kp RBKT &kp N      &kp M         &lt 2 COMMA   &kp DOT      &kp FSLH       &kp BSLH
                                                  &lt 2 LANG1   &lt 1 SPACE  &lt 2 DEL   /**/   &kp BSPC &lt 1 RET                             
            >;
        };

        upper_layer {
            bindings = <
&kp ESC    &kp F1     &kp F2      &kp F3     &kp F4     &kp F5             /**/           &kp F6  &kp F7     &kp F8    &kp F9     &kp F10   &kp F11
&kp TAB    &kp Q      &kp W       &kp E      &kp R      &kp T              /**/           &kp Y   &kp U      &kp UP    &kp O      &kp P     &kp UNDER
&kp CAPS   &kp LC(A)  &kp LC(S)   &trans     &trans     &kp G              /**/           &kp H   &kp LEFT   &kp DOWN  &kp RIGHT  &kp SEMI  &kp SQT
&kp LC(Y)  &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LC(V)  &kp B     &kp LBKT /**/  &kp RBKT &kp N   &mkp LCLK  &mkp SCLK  &mkp RCLK  &kp FSLH  &kp DQT                                          &kp RET    &kp SPACE &kp DEL  /**/  &kp BSPC &kp RET                             
            >;
        };

        lower_layer {
            bindings = <
&kp ESC    &kp N1     &kp N2      &kp N3         &kp N4        &kp N5       /**/        &kp N6 &kp N7        &kp N8        &kp N9       &kp N0   &kp GRAVE
&kp TAB    &kp Q      &kp W       &kp E         &kp R         &kp T        /**/        &kp Y  &kp U         &kp UP         &kp O        &kp P    &kp EQUAL
&kp CAPS   &kp A      &trans      &trans     &trans     &kp G        /**/        &kp H    &kp LEFT  &kp DOWN &kp RIGHT &kp SEMI   &kp MINUS
&kp LC(Y)  &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LC(V)  &kp B     &kp LBKT /**/  &kp RBKT &kp N         &kp LCLK     &kp SCLK    &kp RCLK  &kp FSLH &kp BSLH
                                             &kp RET    &kp SPACE &kp DEL  /**/  &kp BSPC &kp RET                             
            >;
        };
    };
};
