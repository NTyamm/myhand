 /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define FUNC 2
#define OTHER 3

#define NUM_L 1 2 3 4 5
#define NUM_R 6 7 8 9 10

#define ALPHA_L 13 14 15 16 17 \
                25 26 27 28 29 \
                37 38 39 40 41 42
#define ALPHA_R 18 19 20 21 22 \
                30 31 32 33 34 \
             43 44 45 46 47 48

#define MACRO_L 0 12 24 36
#define MACRO_R 11 23 35 49

#define THUMBS 50 51 52 53 54

/ {
    combos {
        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <2 0>;
            bindings = <&kp LBKT>;
        };
        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <2 11>;
            bindings = <&kp RBKT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
 
        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |       |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |       |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                            |SPACE | DEL  |       | basc | RET   | 
            bindings = <
&kp TAB     &kp Q         &kp W         &kp E       &kp R           &kp T                    /**/            &kp Y      &kp U           &kp I          &kp O         &kp P            &kp MINUS
&kp LSHIFT  &kp A         &kp S         &kp D       &lt 3 F         &kp G                    /**/            &kp H      &kp J           &kp K          &kp L         &kp SEMI         &kp EQUAL
&kp LCTRL  &kp Z         &kp X         &kp C       &kp V           &kp B                    /**/            &kp N      &kp M           &kp COMMA      &kp DOT       &kp FSLH         &kp BSLH
                                        &trans     &lt 1 SPACE     &lt 2 DEL                /**/              &kp BSPC   &kp RET                            
            >;
        };

        lower_layer {
            bindings = <
&kp ESC         &kp GRAVE  &kp SQT      &kp DQT    &kp HOME        &kp END            /**/  &kp N7   &kp N8    &kp N9   &kp O      &kp UP     &kp UNDER
&kp LANG1       &kp A      &kp S        &kp DEL    &kp PAGE_DOWN   &kp PAGE_UP        /**/  &kp N4   &kp N5    &kp N6   &kp LEFT   &kp DOWN  &kp RIGHT
&kp LSHIFT      &kp Z      &kp X        &kp C      &kp V          &kp LBKT           /**/  &kp N1   &kp N2    &kp N3   &trans     &kp FSLH  &kp DQT 
                                        &trans    &kp LALT       &kp DEL           /**/   &kp N0   &kp RET                             
            >;
        };

        func_layer {
            bindings = <
&kp ESC         &kp Q      &kp SQT     &kp DQT    &kp HOME        &kp END            /**/  &kp F9   &kp F10   &kp F11  &kp F12    &kp LBKT  &kp RBKT
&kp CAPS        &kp A      &kp S       &kp D      &kp F           &kp PAGE_UP        /**/  &kp F5   &kp F6    &kp F7   &kp F8     &kp SEMI  &kp SQT
&kp LSHIFT      &kp Z      &kp X       &kp C      &kp V           &kp LBKT           /**/  &kp F1   &kp F2    &kp F3   &kp F4     &kp FSLH  &kp DQT 
                                       &trans     &kp SPACE       &kp DEL           /**/  &kp LGUI   &kp RET                             
            >;
        };

    };
};
